{"version":3,"sources":["logo.svg","VisualSorter/SortingAlgo.jsx","VisualSorter/VisualSorter.jsx","App.js","reportWebVitals.js","index.js"],"names":["mergeSortAnimations","array","length","tempArray","slice","animation","mergeOperator","finalArray","startID","endID","midID","Math","floor","k","i","j","push","merger","console","log","heapify","arr","n","Heapanimation","largest","l","r","swap","quickSortAnimation","quickAnimation","quickSorting","left","right","index","low","high","pivot","swapTemp","partition","VisualSorting","props","state","speed","alreadyRunning","this","resetArray","max","min","round","random","setState","ms","quickanimations","arrayBars","document","getElementsByClassName","colorID","barOneIdx","barTwoIdx","barOneStyle","style","barTwoStyle","color","setTimeout","backgroundColor","newHeight1","newHeight2","height","bubbleanimations","bubbleAnimation","temp","bubbleSortAnimation","Heapanimations","HeapsortAnimation","animations","newHeight","a","Uispeed","getElementById","value","className","id","onClick","quickSort","mergeSort","heapSort","bubbleSort","type","defaultValue","step","onChange","setSpeed","map","idx","backroundColor","Component","VisualSorter","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.bfb8cf18.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export function mergeSortAnimations(array)\r\n{   \r\n    if(array.length<=1) return array\r\n    const tempArray = array.slice();\r\n    const animation=[];\r\n    mergeOperator(array,0,array.length-1,tempArray,animation)\r\n    return animation;\r\n}\r\nfunction mergeOperator(finalArray, startID, endID, tempArray, animation){\r\n    if(startID==endID){return;}\r\n    const midID=Math.floor((startID+endID)/2);\r\n    mergeOperator(tempArray,startID,midID,finalArray,animation);\r\n    mergeOperator(tempArray,midID+1,endID,finalArray,animation);\r\n    merger(finalArray,startID,midID,endID,tempArray,animation);\r\n    console.log(finalArray);\r\n    return finalArray;\r\n}\r\nfunction merger(finalArray,startID,midID,endID,tempArray,animation)\r\n{let k=startID;\r\n let i=startID;\r\n let j=midID+1;\r\n while(i<=midID && j<=endID){\r\n    animation.push([i,j]);\r\n    animation.push([i,j]);\r\n    if(tempArray[i]<=tempArray[j])\r\n   { \r\n    animation.push([k,tempArray[i]]);\r\n    finalArray[k++]=tempArray[i++];  }\r\n    else{\r\n        animation.push([k,tempArray[j]]);\r\n        finalArray[k++]=tempArray[j++];          \r\n    } \r\n }\r\n while(i<=midID){\r\n    animation.push([i,i]);\r\n    animation.push([i,i]);\r\n    animation.push([k,tempArray[i]]);\r\n    finalArray[k++]=tempArray[i++]; \r\n }\r\n while(j<=endID){\r\n    animation.push([j,j]);\r\n    animation.push([j,j]);\r\n    animation.push([k,tempArray[j]]);\r\n    finalArray[k++]=tempArray[j++]; \r\n }\r\n\r\n}\r\n\r\n//heap sort\r\nexport function HeapsortAnimation(arr)\r\n    {   \r\n        const Heapanimation=[];\r\n        var n = arr.length;\r\n        console.log(arr)\r\n        // Build heap (rearrange array)\r\n        var limit=Math.floor(n / 2)-1;\r\n        for (var i = limit; i >= 0; i--)\r\n        {   \r\n            heapify(arr, n, i, Heapanimation);\r\n        }\r\n        // One by one extract an element from heap\r\n        for (var i = n - 1; i > 0; i--) {\r\n            // Move current root to end\r\n            console.log(\"swap\",i,arr[0],0,arr[i],\"99\")\r\n            var temp = arr[0];\r\n            arr[0] = arr[i];\r\n            arr[i] = temp;   \r\n            Heapanimation.push([\"swap\",i,arr[i],0,arr[0]]); \r\n            console.log(arr);\r\n            heapify(arr, i, 0,Heapanimation);\r\n            \r\n        }\r\n        console.log(arr);\r\n        return Heapanimation;\r\n        \r\n    }\r\n \r\n    // To heapify a subtree rooted with node i which is\r\n    // an index in arr[]. n is size of heap\r\n    function heapify(arr, n, i,Heapanimation)\r\n    {\r\n        var largest = i; // Initialize largest as root\r\n        var l = 2 * i + 1; // left = 2*i + 1\r\n        var r = 2 * i + 2; // right = 2*i + 2\r\n \r\n        // If left child is larger than root\r\n        \r\n        if (l < n && arr[l] > arr[largest])\r\n           {  \r\n                Heapanimation.push([\"comp\",1,l,largest]);\r\n               Heapanimation.push([\"comp\",2,l,largest]);\r\n               largest = l;\r\n             } \r\n        // If right child is larger than largest so far\r\n       \r\n        if (r < n && arr[r] > arr[largest])\r\n           {   \r\n               Heapanimation.push([\"comp\",1,r,largest]);\r\n           Heapanimation.push([\"comp\",2,r,largest]);\r\n               largest = r;      \r\n           }\r\n        // If largest is not root\r\n        if (largest != i) {\r\n            console.log(\"swap\",i,arr[largest],largest,arr[i])\r\n            var swap = arr[i];\r\n            arr[i] = arr[largest];\r\n            arr[largest] = swap;  \r\n            console.log(arr);\r\n            Heapanimation.push([\"swap\",i,arr[i],largest,arr[largest]]);\r\n            // Recursively heapify the affected sub-tree\r\n            heapify(arr, n, largest,Heapanimation);\r\n        }\r\n    }\r\n \r\n    /* A utility function to print array of size n */\r\n\r\n\r\n\r\n\r\n    //Bubble sort\r\n    export function bubbleSortAnimation(array)\r\n    {\r\n        const bubbleAnimation=[];\r\n        let n=array.length;\r\n        for(let i=0;i<n-1;i++)\r\n        {\r\n            for(let j=0;j<n-1-i;j++)\r\n            {\r\n                if(array[j]>array[j+1])\r\n                {\r\n                    bubbleAnimation.push([\"comp\",1,j,j+1]);\r\n                    bubbleAnimation.push([\"comp\",2,j,j+1]);\r\n                    var temp=array[j+1];\r\n                    array[j+1]=array[j];\r\n                    array[j]=temp;\r\n                    bubbleAnimation.push([\"swap\",j,array[j],j+1,array[j+1]]);\r\n                }\r\n            }\r\n        }\r\n        return bubbleAnimation;\r\n    }\r\n    \r\n \r\n\r\n    ///Quick sort\r\n\r\n    export function quickSortAnimation(arr)\r\n    {   console.log(arr);\r\n        const quickAnimation=[];\r\n        quickSorting(arr,0,arr.length-1,quickAnimation);\r\n        return quickAnimation;\r\n        console.log(arr);\r\n    }\r\n    function quickSorting(arr, left, right,quickAnimation)\r\n    {\r\n        if(left>=right)return;\r\n        \r\n        //Math.floor((left+right)/2);\r\n        let index=partition(arr,left,right,quickAnimation);\r\n        quickSorting(arr,left,index-1,quickAnimation);\r\n        quickSorting(arr,index+1,right,quickAnimation);\r\n        \r\n    }\r\n    function partition(arr,low,high,quickAnimation){\r\n        let pivot=high;\r\n    let i = (low-1);\r\n\r\n    for (let j = low; j < high; j++) {\r\n        if (arr[j] <= arr[pivot]) {\r\n            quickAnimation.push([\"comp\",1,j,pivot]);\r\n           quickAnimation.push([\"comp\",2,j,pivot]);\r\n            i++;\r\n\r\n            let swapTemp = arr[i];\r\n            arr[i] = arr[j];\r\n            arr[j] = swapTemp;\r\n            quickAnimation.push([\"swap\",i,arr[i],j,arr[j]]);\r\n        }\r\n    }\r\n\r\n    let swapTemp = arr[i+1];\r\n    arr[i+1] = arr[high];\r\n    arr[high] = swapTemp;\r\n    quickAnimation.push([\"swap\",i+1,arr[i+1],high,arr[high]]);\r\n    return i+1;\r\n\r\n       \r\n    //     while(left<=right){\r\n    //     while(arr[left]<arr[pivot])\r\n    //     {    quickAnimation.push([\"comp\",1,left,pivot]);\r\n    //          quickAnimation.push([\"comp\",2,left,pivot]);\r\n    //          left++;\r\n    //     }\r\n    //     while(arr[right]>arr[pivot])\r\n    //     {   quickAnimation.push([\"comp\",1,right,pivot]);\r\n    //        quickAnimation.push([\"comp\",2,right,pivot]);\r\n    //        right--;\r\n    //     }\r\n    //     if(left<=right)\r\n    //     {\r\n    //      var temp=arr[left];\r\n    //     arr[left]=arr[right];\r\n    //     arr[right]=temp;\r\n    //     quickAnimation.push([\"swap\",left,arr[left],right,arr[right]]);\r\n    //     left++;\r\n    //     right--; \r\n    //     }\r\n    // }\r\n    //   return left;\r\n\r\n    }\r\n\r\n \r\n\r\n \r\n \r\n\r\n","import React, { Component, useState, useEffect } from \"react\";\r\nimport {RangeStepInput} from 'react-range-step-input';\r\n\r\nimport './VisualSorter.css';\r\nimport {mergeSortAnimations,HeapsortAnimation,bubbleSortAnimation,quickSortAnimation} from \"./SortingAlgo.jsx\"\r\n\r\n\r\nfunction VisualSorter()\r\n{\r\n    return <div>\r\n      \r\n        <VisualSorting />\r\n    </div> ;\r\n}\r\n\r\nfunction generateRandomNumber(max, min)\r\n{\r\n    var number=Math.round(Math.random()*(max-min+1)+min)\r\n    return number;\r\n}\r\n\r\n \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass VisualSorting extends Component{\r\n\r\n    constructor(props)\r\n    {super(props);\r\n    this.state={array:[],\r\n    speed:6,\r\n    alreadyRunning:false};\r\n    }\r\n   componentDidMount()\r\n   {this.resetArray();}\r\n   \r\n   resetArray(){\r\n       if(this.state.alreadyRunning==true) return;\r\n       const array=[];\r\n       for(let i=0;i<169;i++)\r\n       {array.push(generateRandomNumber(5,600));}\r\n       this.setState({array});\r\n   }\r\n    \r\n\r\n   quickSort()\r\n   {\r\n    const ms=this.state.speed;\r\n    const quickanimations=quickSortAnimation(this.state.array);\r\n    for (let i = 0; i < quickanimations.length; i++) {\r\n     const arrayBars = document.getElementsByClassName('array-bar');\r\n     const operation=quickanimations[i][0];\r\n     if(operation==\"comp\"){\r\n        const [opr,colorID,barOneIdx, barTwoIdx] = quickanimations[i];\r\n       const barOneStyle = arrayBars[barOneIdx].style;\r\n       const barTwoStyle = arrayBars[barTwoIdx].style;\r\n       const color = colorID === 1 ? \"red\" : \"rgb(18, 183, 233)\";\r\n       setTimeout(() => {\r\n         barOneStyle.backgroundColor = color;\r\n         barTwoStyle.backgroundColor = color;\r\n       },i* ms);\r\n     }\r\n     else{\r\n        \r\n        setTimeout(() => {\r\n            const [opr,barOneIdx, newHeight1,barTwoIdx,newHeight2] = quickanimations[i];\r\n            const barOneStyle = arrayBars[barOneIdx].style;\r\n            barOneStyle.height = `${newHeight1}px`;\r\n            const barTwoStyle = arrayBars[barTwoIdx].style;\r\n            barTwoStyle.height = `${newHeight2}px`;\r\n          }, i* ms);\r\n   \r\n     }\r\n     \r\n   }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n   bubbleSort()\r\n   {\r\n    const ms=this.state.speed;\r\n    const bubbleanimations=bubbleSortAnimation(this.state.array);\r\n    for (let i = 0; i < bubbleanimations.length; i++) {\r\n     const arrayBars = document.getElementsByClassName('array-bar');\r\n     const operation=bubbleanimations[i][0];\r\n     if(operation==\"comp\"){\r\n        const [opr,colorID,barOneIdx, barTwoIdx] = bubbleanimations[i];\r\n       const barOneStyle = arrayBars[barOneIdx].style;\r\n       const barTwoStyle = arrayBars[barTwoIdx].style;\r\n       const color = colorID === 1 ? \"red\" : \"rgb(18, 183, 233)\";\r\n       setTimeout(() => {\r\n         barOneStyle.backgroundColor = color;\r\n         barTwoStyle.backgroundColor = color;\r\n       },i* ms);\r\n     }\r\n     else{\r\n        \r\n        setTimeout(() => {\r\n            const [opr,barOneIdx, newHeight1,barTwoIdx,newHeight2] = bubbleanimations[i];\r\n            const barOneStyle = arrayBars[barOneIdx].style;\r\n            barOneStyle.height = `${newHeight1}px`;\r\n            const barTwoStyle = arrayBars[barTwoIdx].style;\r\n            barTwoStyle.height = `${newHeight2}px`;\r\n          }, i* ms);\r\n   \r\n     }\r\n     \r\n   }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n   heapSort()\r\n   {\r\n    const ms=this.state.speed;\r\n    const Heapanimations=HeapsortAnimation(this.state.array);\r\n    for (let i = 0; i < Heapanimations.length; i++) {\r\n     const arrayBars = document.getElementsByClassName('array-bar');\r\n     const operation=Heapanimations[i][0];\r\n     if(operation==\"comp\"){\r\n        const [opr,colorID,barOneIdx, barTwoIdx] = Heapanimations[i];\r\n       const barOneStyle = arrayBars[barOneIdx].style;\r\n       const barTwoStyle = arrayBars[barTwoIdx].style;\r\n       const color = colorID === 1 ? \"red\" : \"rgb(18, 183, 233)\";\r\n       setTimeout(() => {\r\n         barOneStyle.backgroundColor = color;\r\n         barTwoStyle.backgroundColor = color;\r\n       },i* ms);\r\n     }\r\n     else{\r\n        \r\n        setTimeout(() => {\r\n            const [opr,barOneIdx, newHeight1,barTwoIdx,newHeight2] = Heapanimations[i];\r\n            console.log(\"Setting\",barOneIdx,newHeight1,barTwoIdx,newHeight2)\r\n            \r\n            const barOneStyle = arrayBars[barOneIdx].style;\r\n            barOneStyle.height = `${newHeight1}px`;\r\n            const barTwoStyle = arrayBars[barTwoIdx].style;\r\n            barTwoStyle.height = `${newHeight2}px`;\r\n          }, i* ms);\r\n   \r\n     }\r\n     \r\n   }\r\n}\r\n\r\n   mergeSort(){\r\n       \r\n       const ms=this.state.speed;\r\n       const animations=mergeSortAnimations(this.state.array);\r\n       for (let i = 0; i < animations.length; i++) {\r\n        const arrayBars = document.getElementsByClassName('array-bar');\r\n        const isColorChange = i % 3 !== 2;\r\n        if (isColorChange) {\r\n          const [barOneIdx, barTwoIdx] = animations[i];\r\n          const barOneStyle = arrayBars[barOneIdx].style;\r\n          const barTwoStyle = arrayBars[barTwoIdx].style;\r\n          const color = i % 3 === 0 ? \"red\" : \"rgb(18, 183, 233)\";\r\n          setTimeout(() => {\r\n            barOneStyle.backgroundColor = color;\r\n            barTwoStyle.backgroundColor = color;\r\n          }, i * ms);\r\n        } else {\r\n          setTimeout(() => {\r\n            const [barOneIdx, newHeight] = animations[i];\r\n            const barOneStyle = arrayBars[barOneIdx].style;\r\n            barOneStyle.height = `${newHeight}px`;\r\n          }, i * ms);\r\n        }\r\n      }\r\n      \r\n    \r\n     \r\n   }\r\n  async setSpeed()\r\n  {\r\n    let Uispeed=document.getElementById(\"typeinp\").value ;\r\n    \r\n    Uispeed=10-Uispeed; \r\n    await this.setState({array:this.state.array,speed:Uispeed})\r\n    \r\n  }\r\n   \r\n   render()\r\n   {\r\n      const {array, speed,alreadyRunning}=this.state;\r\n\r\n      return < div className=\"main\">\r\n       \r\n      <div className=\"navHead\">\r\n         <div className=\"LogoTitle\">\r\n         <h1 id=\"pageTitle\">VisualSorter</h1>\r\n       \r\n         </div>\r\n          <div className=\"btnSet\">\r\n              <ul>\r\n                  <li><button id=\"btn-Generate\" className=\"btn\" onClick={()=>this.resetArray()}>Generate New Array</button></li>\r\n                  <li><button id=\"btn-Quick\" className=\"btn\" onClick={()=>this.quickSort()}>QuickSort</button></li>\r\n                  <li><button id=\"btn-Merge\" className=\"btn \" onClick={()=>this.mergeSort()}>MergeSort</button></li>\r\n                  <li><button id=\"btn-Heap\" className=\"btn\" onClick={()=>this.heapSort()}>HeapSort</button></li>\r\n                  <li><button id=\"btn-Bubble\" className=\"btn\" onClick={()=> this.bubbleSort()}>BubbleSort</button></li>\r\n                  <li>\r\n                  <button className=\"btn\">Speed</button>\r\n                  <input id=\"typeinp\" type=\"range\" min=\"0\"  max=\"10\" defaultValue=\"5\"\r\n                          step=\"1\" onChange={()=>this.setSpeed()}/>\r\n                          \r\n                  </li>\r\n                 \r\n                  \r\n              </ul>\r\n              \r\n          </div>\r\n           \r\n     </div>\r\n      <h4>      Step1) Click generate new array Step2) Set the speed Step3) Choose the sorting algorithm</h4>\r\n      <div className=\"ArrayContainer\">\r\n          {\r\n              array.map((value,idx)=>(\r\n                 <div className=\"array-bar\" style={{ backroundColor:\"blue\", height:`${value}px`}}></div>\r\n              //<div className=\"ArrayBar\" key={idx} style={{backgroundColor:\"blue\",height:'${value}px'}}></div>\r\n              ))\r\n          }\r\n          \r\n      </div>\r\n      </ div>\r\n       \r\n       \r\n   }\r\n}\r\n\r\n\r\nfunction Navheader()\r\n{\r\n    return (\r\n     <div className=\"navHead\">\r\n         <div className=\"LogoTitle\">\r\n         <h1 id=\"pageTitle\">VisualSorter</h1>\r\n       \r\n         </div>\r\n          <div className=\"btnSet\">\r\n              <ul>\r\n                  <li><button id=\"btn-Generate\" className=\"btn\" onClick={()=>VisualSorting.resetArray()}>Generate New Array</button></li>\r\n                  <li><button id=\"btn-Quick\" className=\"btn\">QuickSort</button></li>\r\n                  <li><button id=\"btn-Merge\" className=\"btn\">MergeSort</button></li>\r\n                  <li><button id=\"btn-Heap\" className=\"btn\">HeapSort</button></li>\r\n                  <li><button id=\"btn-Bubble\" className=\"btn\">BubbleSort</button></li>\r\n              </ul>\r\n          </div>\r\n     </div>\r\n    );\r\n}\r\nexport default VisualSorter;","import logo from './logo.svg';\nimport './App.css';\nimport VisualSorter from \"./VisualSorter/VisualSorter.jsx\"\n\n\nfunction App() {\n  return (\n    <div >\n      <VisualSorter />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}